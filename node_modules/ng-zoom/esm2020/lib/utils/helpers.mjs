export const sumValues = (source, keys) => {
    let result = 0;
    keys.forEach((key) => {
        const property = source[key];
        const value = parseInt(property, 10) || 0;
        result += value;
    });
    return result;
};
export const getScale = (imageHeight, imageWidth, maxHeight, maxWidth) => {
    const widthScale = maxWidth / imageWidth;
    const heightScale = maxHeight / imageHeight;
    const widthScaleIsOkay = imageHeight * widthScale <= maxHeight;
    return widthScaleIsOkay ? widthScale : heightScale;
};
export const unzoomImage = (image) => {
    image.style.transform = 'scale(1)';
    image.parentElement?.classList.remove('image-zoom-wrapper-zoomed');
    image.addEventListener('transitionend', () => {
        image.classList.remove('image-zoom-zoomed');
    }, {
        once: true,
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXpvb20vc3JjL2xpYi91dGlscy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxDQUN2QixNQUEyQixFQUMzQixJQUFjLEVBQ04sRUFBRTtJQUNWLElBQUksTUFBTSxHQUFXLENBQUMsQ0FBQztJQUV2QixJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBVyxFQUFFLEVBQUU7UUFDM0IsTUFBTSxRQUFRLEdBQVcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3JDLE1BQU0sS0FBSyxHQUFXLFFBQVEsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xELE1BQU0sSUFBSSxLQUFLLENBQUM7SUFDbEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FDdEIsV0FBbUIsRUFDbkIsVUFBa0IsRUFDbEIsU0FBaUIsRUFDakIsUUFBZ0IsRUFDUixFQUFFO0lBQ1YsTUFBTSxVQUFVLEdBQVcsUUFBUSxHQUFHLFVBQVUsQ0FBQztJQUNqRCxNQUFNLFdBQVcsR0FBVyxTQUFTLEdBQUcsV0FBVyxDQUFDO0lBQ3BELE1BQU0sZ0JBQWdCLEdBQVksV0FBVyxHQUFHLFVBQVUsSUFBSSxTQUFTLENBQUM7SUFDeEUsT0FBTyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUM7QUFDckQsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsS0FBdUIsRUFBRSxFQUFFO0lBQ3JELEtBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQztJQUNuQyxLQUFLLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsMkJBQTJCLENBQUMsQ0FBQztJQUNuRSxLQUFLLENBQUMsZ0JBQWdCLENBQ3BCLGVBQWUsRUFDZixHQUFHLEVBQUU7UUFDSCxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQzlDLENBQUMsRUFDRDtRQUNFLElBQUksRUFBRSxJQUFJO0tBQ1gsQ0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHN1bVZhbHVlcyA9IChcbiAgc291cmNlOiBDU1NTdHlsZURlY2xhcmF0aW9uLFxuICBrZXlzOiBzdHJpbmdbXVxuKTogbnVtYmVyID0+IHtcbiAgbGV0IHJlc3VsdDogbnVtYmVyID0gMDtcblxuICBrZXlzLmZvckVhY2goKGtleTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcHJvcGVydHk6IHN0cmluZyA9IHNvdXJjZVtrZXldO1xuICAgIGNvbnN0IHZhbHVlOiBudW1iZXIgPSBwYXJzZUludChwcm9wZXJ0eSwgMTApIHx8IDA7XG4gICAgcmVzdWx0ICs9IHZhbHVlO1xuICB9KTtcblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFNjYWxlID0gKFxuICBpbWFnZUhlaWdodDogbnVtYmVyLFxuICBpbWFnZVdpZHRoOiBudW1iZXIsXG4gIG1heEhlaWdodDogbnVtYmVyLFxuICBtYXhXaWR0aDogbnVtYmVyXG4pOiBudW1iZXIgPT4ge1xuICBjb25zdCB3aWR0aFNjYWxlOiBudW1iZXIgPSBtYXhXaWR0aCAvIGltYWdlV2lkdGg7XG4gIGNvbnN0IGhlaWdodFNjYWxlOiBudW1iZXIgPSBtYXhIZWlnaHQgLyBpbWFnZUhlaWdodDtcbiAgY29uc3Qgd2lkdGhTY2FsZUlzT2theTogYm9vbGVhbiA9IGltYWdlSGVpZ2h0ICogd2lkdGhTY2FsZSA8PSBtYXhIZWlnaHQ7XG4gIHJldHVybiB3aWR0aFNjYWxlSXNPa2F5ID8gd2lkdGhTY2FsZSA6IGhlaWdodFNjYWxlO1xufTtcblxuZXhwb3J0IGNvbnN0IHVuem9vbUltYWdlID0gKGltYWdlOiBIVE1MSW1hZ2VFbGVtZW50KSA9PiB7XG4gIGltYWdlLnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSgxKSc7XG4gIGltYWdlLnBhcmVudEVsZW1lbnQ/LmNsYXNzTGlzdC5yZW1vdmUoJ2ltYWdlLXpvb20td3JhcHBlci16b29tZWQnKTtcbiAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAndHJhbnNpdGlvbmVuZCcsXG4gICAgKCkgPT4ge1xuICAgICAgaW1hZ2UuY2xhc3NMaXN0LnJlbW92ZSgnaW1hZ2Utem9vbS16b29tZWQnKTtcbiAgICB9LFxuICAgIHtcbiAgICAgIG9uY2U6IHRydWUsXG4gICAgfVxuICApO1xufTtcbiJdfQ==