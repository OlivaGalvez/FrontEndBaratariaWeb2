{"version":3,"sources":["webpack:///src/app/gestion/ofertas/nueva/documentacion-modal/documentacion-modal.component.ts","webpack:///src/app/gestion/ofertas/nueva/documentacion-modal/documentacion-modal.component.html","webpack:///src/app/services/oferta.service.ts","webpack:///src/app/gestion/ofertas/ofertas.module.ts","webpack:///src/app/gestion/ofertas/nueva/nueva.component.ts","webpack:///src/app/gestion/ofertas/nueva/nueva.component.html","webpack:///src/app/gestion/ofertas/nueva/eliminar-documentacion-modal/eliminar-documentacion-modal.component.ts","webpack:///src/app/gestion/ofertas/nueva/eliminar-documentacion-modal/eliminar-documentacion-modal.component.html","webpack:///src/app/gestion/ofertas/listado/listado.component.ts","webpack:///src/app/gestion/ofertas/listado/listado.component.html"],"names":["DocumentacionModalComponent","fb","modal","passEntry","loadForm","formGroup","group","nombre","documento","required","file","event","target","files","patchValue","get","updateValueAndValidity","formData","value","id","Math","floor","random","tamanio","niceBytes","size","emit","close","reset","x","units","l","n","parseInt","toFixed","selector","templateUrl","styleUrls","OfertaService","http","API_URL","apiUrl","oferta","FormData","append","JSON","stringify","name","post","pipe","result","put","tableState","response","filteredResult","items","total","subscriptions","forEach","sb","unsubscribe","providedIn","OfertasModule","provide","useClass","forChild","path","component","declarations","imports","providers","entryComponents","NuevaComponent","formBuilder","activatedRouter","router","ofertaService","uploadService","ref","toastr","modalService","disabledCampos","mostrarBotonesGeneral","mostrarBotonEdit","mostrarBotonDelete","currentDate","Date","base64textString","imagePath","mostrarImagen","listDocumentacion","idOferta","snapshot","paramMap","isAddMode","form","titulo","disabled","fechaAlta","fechaInicio","fechaFin","mostrar","imagenServidor","fechaAltaAux","year","getFullYear","month","getMonth","day","getDate","getById","data","mostrarDatosAlEditar","subscribe","format","imagenServidorBase64","listDocumentos","enable","url","original","download","newBlob","Blob","type","window","URL","createObjectURL","link","document","createElement","href","dispatchEvent","MouseEvent","bubbles","cancelable","view","setTimeout","revokeObjectURL","remove","suscription","validar","error","aniadirOferta","success","navigate","modificarOferta","myInputVariable","nativeElement","disable","ngOnInit","detectChanges","uploadImagen","Sent","console","log","ResponseHeader","UploadProgress","Response","reader","FileReader","onload","_handleReaderLoaded","bind","readAsBinaryString","body","fileName","readerEvt","binaryString","btoa","element","editarDocumento","undefined","modalRef","open","result2","find","componentInstance","then","subirDocAlta","e","uploadDocumento","servidor","push","guardarOferta","EliminarDocumentacionModalComponent","eliminarDocumento","ListadoComponent"],"mappings":"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","file":"gestion-ofertas-ofertas-module-es5.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Documento } from 'src/app/models/Documento';\r\n\r\n@Component({\r\n  selector: 'app-documentacion-modal',\r\n  templateUrl: './documentacion-modal.component.html',\r\n  styleUrls: ['./documentacion-modal.component.scss']\r\n})\r\nexport class DocumentacionModalComponent implements OnInit {\r\n\r\n  @Input() documento: Documento;\r\n  @Output() passEntry: EventEmitter<any> = new EventEmitter();\r\n  \r\n  formGroup: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadForm();\r\n  }\r\n\r\n  loadForm() {\r\n    this.formGroup = this.fb.group({\r\n      nombre: [this.documento.nombre, [Validators.required]],\r\n      file: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onChange (event) \r\n  {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.formGroup.patchValue({\r\n      file: file\r\n    });\r\n    this.formGroup.get('file').updateValueAndValidity();\r\n  }\r\n\r\n  guardar ()\r\n  {\r\n    const formData = this.formGroup.value;\r\n    if (!this.documento.id)\r\n    {\r\n      this.documento.id = Math.floor((Math.random()*6)+1);\r\n    }\r\n    this.documento.nombre = formData.nombre;\r\n    this.documento.file= formData.file;\r\n    this.documento.tamanio = this.niceBytes(formData.file.size);\r\n    this.passEntry.emit(this.documento);\r\n    this.modal.close(this.documento);\r\n    this.formGroup.reset();\r\n  }\r\n\r\n  niceBytes(x){\r\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n     let l = 0, n = parseInt(x, 10) || 0;\r\n     while(n >= 1024 && ++l){\r\n         n = n/1024;\r\n     }\r\n     return(n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l]);\r\n   }\r\n\r\n}\r\n","<div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n        <ng-container *ngIf=\"documento\">\r\n            <h3 class=\"card-label\" *ngIf=\"documento.id\">Editar documento</h3>\r\n            <h3 class=\"card-label\" *ngIf=\"!documento.id\">Nuevo documento</h3>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"overlay overlay-block cursor-default modal-body\" style=\"min-height: 204px\">\r\n        <ng-container *ngIf=\"documento\">\r\n            <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <label class=\"form-label\">Nombre del documento</label>\r\n                        <input type=\"text\" class=\"form-control form-control-lg form-control-solid\"\r\n                          formControlName=\"nombre\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input #fileInput type=\"file\" accept=\"application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint,\r\n                    text/plain, application/pdf, image/*\" (change)=\"onChange($event)\">\r\n                </div>\r\n            </form>\r\n        </ng-container> \r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancelar</button>\r\n        <ng-container *ngIf=\"documento\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"guardar()\" [disabled]=\"formGroup.invalid\" >Guardar </button>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TableService } from '../_metronic_portal/shared/crud-table';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Oferta } from '../models/Oferta';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ITableState, TableResponseModel } from '../_metronic_gestion/shared/crud-table';\r\nimport { baseFilter } from '../_fake';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  \r\nexport class OfertaService extends TableService<Oferta> implements OnDestroy{\r\n\r\n  API_URL = `${environment.apiUrl}` + 'api/Ofertas/';\r\n\r\n  constructor(@Inject(HttpClient) http) {\r\n    super(http);\r\n  }\r\n\r\n  aniadirOferta (oferta: Oferta): Observable<Oferta> \r\n  {\r\n    const formData = new FormData(); \r\n          \r\n    formData.append(\"oferta\", JSON.stringify(oferta));\r\n    formData.append(\"imagen\", oferta.file, oferta.file.name);\r\n    return this.http.post<Oferta>(this.API_URL, formData);\r\n  }\r\n\r\n  getById (id: string): Observable<Oferta>{\r\n    return this.http.get(this.API_URL + id).pipe(map(result=><Oferta>result));\r\n  }\r\n\r\n  modificarOferta (oferta: Oferta): Observable<Oferta> \r\n  {\r\n    const formData = new FormData(); \r\n    formData.append(\"oferta\", JSON.stringify(oferta));\r\n    if (oferta.file) formData.append(\"imagen\", oferta.file, oferta.file.name);\r\n    return this.http.put<Oferta>(this.API_URL + oferta.id, formData);\r\n  }\r\n\r\n  eliminarOferta (id:number)\r\n  {\r\n    return this.http.delete(this.API_URL + id);\r\n  }\r\n\r\n  obtenerOfertas (): Observable<Oferta[]>{\r\n     return this.http.get(this.API_URL).pipe(map(result=><Oferta[]>result));\r\n  }\r\n\r\n   // Necesario para mostrar las actividades en la tabla de listado\r\n   find(tableState: ITableState): Observable<TableResponseModel<Oferta>> {\r\n    return this.http.get<Oferta[]>(this.API_URL + \"?portal=false\").pipe(\r\n      map((response: Oferta[]) => {\r\n        const filteredResult = baseFilter(response, tableState);\r\n        const result: TableResponseModel<Oferta> = {\r\n          items: filteredResult.items,\r\n          total: filteredResult.total\r\n        };\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbDateParserFormatter, NgbModalModule, NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { InlineSVGModule } from \"ng-inline-svg\";\r\nimport { NgbDateCustomParserFormatter } from \"src/app/services/date-formatter.service\";\r\nimport { GeneralModule } from \"src/app/_metronic_portal/partials/content/general/general.module\";\r\nimport { CRUDTableModule } from \"src/app/_metronic_gestion/shared/crud-table\";\r\nimport { NuevaComponent } from \"./nueva/nueva.component\";\r\nimport { ListadoComponent } from \"./listado/listado.component\";\r\nimport { DocumentacionModalComponent } from './nueva/documentacion-modal/documentacion-modal.component';\r\nimport { EliminarDocumentacionModalComponent } from './nueva/eliminar-documentacion-modal/eliminar-documentacion-modal.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n      NuevaComponent,\r\n      ListadoComponent,\r\n      DocumentacionModalComponent,\r\n      EliminarDocumentacionModalComponent\r\n    ],\r\n    imports: [\r\n      RouterModule.forChild([\r\n        {\r\n          path: 'nueva',\r\n          component: NuevaComponent,\r\n        },\r\n        {\r\n          path: 'gestion/:id',\r\n          component: NuevaComponent,\r\n        },\r\n        {\r\n          path: 'listado',\r\n          component: ListadoComponent,\r\n        }\r\n      ]),\r\n      CommonModule,\r\n      NgbModule,\r\n      MatCheckboxModule,\r\n      GeneralModule,\r\n      InlineSVGModule,\r\n      CRUDTableModule,\r\n\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n    ],\r\n    providers: [\r\n      { provide: NgbDateParserFormatter, useClass: NgbDateCustomParserFormatter }  // <-- add this\r\n    ],\r\n    entryComponents: [\r\n      DocumentacionModalComponent,\r\n      EliminarDocumentacionModalComponent\r\n    ]\r\n  })\r\n  export class OfertasModule {}","import { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as moment from 'moment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Documento } from 'src/app/models/Documento';\r\nimport { Oferta } from 'src/app/models/Oferta';\r\nimport { OfertaService } from 'src/app/services/oferta.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { DocumentacionModalComponent } from './documentacion-modal/documentacion-modal.component';\r\nimport { EliminarDocumentacionModalComponent } from './eliminar-documentacion-modal/eliminar-documentacion-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-nueva',\r\n  templateUrl: './nueva.component.html',\r\n  styleUrls: ['./nueva.component.scss']\r\n})\r\nexport class NuevaComponent implements OnInit, OnDestroy  {\r\n  form: FormGroup;\r\n  suscription: Subscription;\r\n  oferta: Oferta;\r\n  idOferta: string;\r\n\r\n  isAddMode: boolean;\r\n  disabledCampos: boolean = true;\r\n  mostrarBotonesGeneral: boolean = true;\r\n  mostrarBotonEdit: boolean = true;\r\n  mostrarBotonDelete: boolean = false;\r\n\r\n  currentDate = new Date();\r\n  base64textString:String=\"\";\r\n  imagePath:String=\"\";\r\n  mostrarImagen: boolean = false;\r\n\r\n  @ViewChild('fileInput')\r\n  myInputVariable: ElementRef;\r\n\r\n  listDocumentacion: Documento [] = [];\r\n\r\n  constructor(private formBuilder: FormBuilder,  private activatedRouter: ActivatedRoute, private router: Router,\r\n    private ofertaService: OfertaService,\r\n    private uploadService: UploadService, private ref: ChangeDetectorRef, private toastr: ToastrService,\r\n    private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.idOferta = this.activatedRouter.snapshot.paramMap.get('id');\r\n\r\n    this.isAddMode = !this.idOferta;\r\n    if (this.isAddMode) {\r\n      this.disabledCampos = false; this.mostrarBotonEdit = false; \r\n    }\r\n    else {\r\n      this.mostrarBotonesGeneral = false;\r\n    }\r\n\r\n    this.form = this.formBuilder.group({\r\n      id: 0,\r\n      titulo: [{\r\n          value: '',\r\n          disabled: this.disabledCampos,\r\n      },  [Validators.required]],\r\n      fechaAlta: [{\r\n        value: null,\r\n        disabled: true,\r\n      },  [Validators.required]],\r\n      fechaInicio: [{\r\n        value: null,\r\n        disabled: this.disabledCampos,\r\n      },  [Validators.required]],\r\n      fechaFin: [{\r\n          value: null,\r\n          disabled: this.disabledCampos,\r\n      }],\r\n      mostrar: [{\r\n          value: null,\r\n          disabled: this.disabledCampos,\r\n      }],\r\n      file: [null],\r\n      imagenServidor: [null]\r\n    })\r\n\r\n    if (this.isAddMode)\r\n    {\r\n      const fechaAltaAux = { year: this.currentDate.getFullYear(), month: this.currentDate.getMonth()+ 1, \r\n        day: this.currentDate.getDate() };\r\n      this.form.patchValue({\r\n          fechaAlta: fechaAltaAux,\r\n          fechaInicio: fechaAltaAux\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.ofertaService.getById(this.idOferta).pipe(\r\n        tap(data =>  this.mostrarDatosAlEditar(data)),\r\n      ).subscribe(result => \r\n        this.form.patchValue({\r\n          titulo: result.titulo,\r\n          mostrar: result.mostrar,\r\n          fechaAlta:  {year: new Date(moment(result.fechaAlta).format(\"YYYY-MM-DD HH:mm:ss\")).getFullYear(),\r\n            month: new Date(moment(result.fechaAlta).format(\"YYYY-MM-DD HH:mm:ss\")).getMonth(), \r\n            day: new Date(moment(result.fechaAlta).format(\"YYYY-MM-DD HH:mm:ss\")).getDate()},\r\n          fechaInicio: result.fechaInicio != null ? {year: new Date(moment(result.fechaInicio).format(\"YYYY-MM-DD HH:mm:ss\")).getFullYear(),\r\n            month: new Date(moment(result.fechaInicio).format(\"YYYY-MM-DD HH:mm:ss\")).getMonth(), \r\n            day: new Date(moment(result.fechaInicio).format(\"YYYY-MM-DD HH:mm:ss\")).getDate()} : null,\r\n          fechaFin: result.fechaFin != null ? {year: new Date(moment(result.fechaFin).format(\"YYYY-MM-DD HH:mm:ss\")).getFullYear(),\r\n            month: new Date(moment(result.fechaFin).format(\"YYYY-MM-DD HH:mm:ss\")).getMonth(), \r\n            day: new Date(moment(result.fechaFin).format(\"YYYY-MM-DD HH:mm:ss\")).getDate()} : null,\r\n        })\r\n      );\r\n    }\r\n   \r\n  }\r\n\r\n  mostrarDatosAlEditar (data) {\r\n    this.oferta = data;\r\n    this.mostrarImagen = true;\r\n    this.imagePath = this.oferta.imagenServidorBase64;\r\n    this.listDocumentacion = this.oferta.listDocumentos;\r\n  }\r\n\r\n  editarForm ()\r\n  {\r\n    this.mostrarBotonesGeneral = true;\r\n    this.mostrarBotonEdit = false;\r\n    this.mostrarBotonDelete = true;\r\n    this.form.get('titulo').enable();\r\n    this.form.get('fechaInicio').enable();\r\n    this.form.get('fechaFin').enable();\r\n    this.form.get('mostrar').enable();\r\n  }\r\n\r\n  download(url, original): void {\r\n    this.uploadService.download(url).subscribe((x) => {\r\n        var newBlob = new Blob([x], { type: \"application/pdf\" });\r\n        const data = window.URL.createObjectURL(newBlob);\r\n        \r\n        var link = document.createElement('a');\r\n        link.href = data;\r\n        link.download = original;\r\n        link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));\r\n        \r\n        setTimeout(function () {\r\n            window.URL.revokeObjectURL(data);\r\n            link.remove();\r\n        }, 100);\r\n    });\r\n  }\r\n\r\n  eliminarForm () \r\n  {\r\n    /*const modalRef = this.modalService.open(EliminarActividadComponent, { size: 'lg' });\r\n    modalRef.result.then((result) => {\r\n      this.actividadService.eliminarActividad(this.actividad.id).subscribe((data)=>{\r\n        this.router.navigate(['/admin/actividad/listado/']);\r\n        this.toastr.error('Actividad borrada', 'Actividad');\r\n      });\r\n      \r\n    }).catch(e => {\r\n      console.log(e);\r\n    });*/\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.suscription) {\r\n      this.suscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  guardarOferta ()\r\n  {\r\n    let validar = true;\r\n    const oferta: Oferta = {\r\n      id: this.oferta != null ? this.oferta.id : 0,\r\n      titulo: this.form.get('titulo')?.value,\r\n      fechaAlta: moment.utc(this.form.get('fechaAlta')?.value),\r\n      fechaInicio: moment.utc(this.form.get('fechaInicio')?.value),\r\n      fechaFin: moment.utc(this.form.get('fechaFin')?.value),\r\n      mostrar: this.form.get('mostrar') != null ? this.form.get('mostrar').value : false,\r\n      file: this.form.get('file')?.value,\r\n      imagenServidor: this.form.get('imagenServidor').value,\r\n      listDocumentos: this.listDocumentacion\r\n    };\r\n\r\n    if (oferta.fechaFin != null && oferta.fechaInicio > oferta.fechaFin)  \r\n    {\r\n      this.toastr.error('La fecha fin no puede ser anterior a la fecha inicio', 'Error');\r\n      validar = false;\r\n    }\r\n\r\n    if (this.isAddMode && oferta.file == null)\r\n    {\r\n      this.toastr.error('Inserte una imagen', 'Error');\r\n      validar = false;\r\n    }\r\n\r\n    if (validar)\r\n    {\r\n      //Nueva oferta\r\n      if (this.isAddMode)\r\n      {\r\n        this.ofertaService.aniadirOferta(oferta).subscribe(data => {\r\n          this.toastr.success('Oferta guardada', 'Oferta');\r\n          this.router.navigate(['/admin/ofertas/gestion/' + data.id]);\r\n        }); \r\n      }\r\n      //Editar oferta\r\n      else {\r\n        this.ofertaService.modificarOferta(oferta).subscribe(data => {\r\n          this.toastr.success('Oferta guardada', 'Oferta');\r\n          this.myInputVariable.nativeElement.value = \"\";\r\n          this.mostrarImagen = false;\r\n  \r\n          this.listDocumentacion = null;\r\n\r\n          this.mostrarBotonEdit = true;\r\n          this.mostrarBotonDelete = false;\r\n\r\n          this.form.get('titulo').disable();\r\n          this.form.get('fechaInicio').disable();\r\n          this.form.get('fechaFin').disable();\r\n          this.form.get('mostrar').disable();\r\n          \r\n          this.form.reset();\r\n          this.ngOnInit();\r\n          this.ref.detectChanges();\r\n        }); \r\n      }\r\n     \r\n    }\r\n  }\r\n\r\n  onUpload(event) {\r\n\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({\r\n      file: file\r\n    });\r\n    this.form.get('file').updateValueAndValidity();\r\n\r\n    this.uploadService.uploadImagen(this.form.value.file).subscribe((event: HttpEvent<any>) => {\r\n      switch (event.type) {\r\n        case HttpEventType.Sent:\r\n          console.log('Request has been made!');\r\n          break;\r\n        case HttpEventType.ResponseHeader:\r\n          console.log('Response header has been received!');\r\n          break;\r\n        case HttpEventType.UploadProgress:\r\n          break;\r\n        case HttpEventType.Response:\r\n          var reader = new FileReader();\r\n          reader.onload =this._handleReaderLoaded.bind(this);\r\n          reader.readAsBinaryString(this.form.value.file);\r\n\r\n          this.form.patchValue({\r\n            imagenServidor: event.body.fileName\r\n          });\r\n          this.form.get('imagenServidor').updateValueAndValidity();\r\n      }\r\n    })\r\n  }\r\n\r\n  _handleReaderLoaded(readerEvt) {\r\n    var binaryString = readerEvt.target.result;\r\n    this.base64textString= btoa(binaryString);\r\n    this.imagePath = \"data:image/png;base64,\" + this.base64textString;\r\n    this.mostrarImagen = true;\r\n    this.ref.detectChanges();\r\n   }\r\n\r\n  reset(element) {\r\n    this.mostrarImagen = false;\r\n    this.form.patchValue({\r\n      file: null\r\n    });\r\n    element.value = \"\";\r\n  }\r\n\r\n  crearDocumentacion() {\r\n    this.editarDocumento(undefined);\r\n  }\r\n\r\n  editarDocumento(id: number) {\r\n    const modalRef = this.modalService.open(DocumentacionModalComponent, { size: 'lg' });\r\n    if (id != undefined)\r\n    {\r\n      var result2 = this.listDocumentacion.find(x => x.id === id);\r\n      const documento: Documento = {\r\n        id: result2.id,\r\n        nombre: result2.nombre\r\n      };\r\n\r\n      modalRef.componentInstance.documento = documento;\r\n    }\r\n    else {\r\n      const documento: Documento = {\r\n        id: undefined,\r\n        nombre: ''\r\n      };\r\n      modalRef.componentInstance.documento = documento;\r\n    }\r\n\r\n    modalRef.result.then((result: Documento) => {\r\n      if (result) {\r\n        /*let index = this.listDocumentacion.findIndex(d => d.id === id);\r\n        if (index > -1) this.listDocumentacion.splice(index, 1);*/\r\n        this.listDocumentacion = [];\r\n        this.subirDocAlta(result);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  subirDocAlta (result) \r\n  {\r\n    this.uploadService.uploadDocumento(result.file).subscribe((event: HttpEvent<any>) => {\r\n      switch (event.type) {\r\n        case HttpEventType.Sent:\r\n          console.log('Request has been made!');\r\n          break;\r\n        case HttpEventType.ResponseHeader:\r\n          console.log('Response header has been received!');\r\n          break;\r\n        case HttpEventType.UploadProgress:\r\n          break;\r\n        case HttpEventType.Response:\r\n          result.url =  event.body.url;\r\n          result.servidor = event.body.fileName;\r\n          result.original = result.file.name;\r\n          this.listDocumentacion.push(result);\r\n          this.ref.detectChanges();\r\n      }\r\n    })\r\n  }\r\n\r\n  eliminarDocumento (id: number) \r\n  {\r\n    const modalRef = this.modalService.open(EliminarDocumentacionModalComponent, { size: 'lg' });\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.result.then((result) => {\r\n     /* let index = this.listDocumentacion.findIndex(d => d.id === id);\r\n      if (index > -1) this.listDocumentacion.splice(index, 1);*/\r\n      this.listDocumentacion = [];\r\n      this.ref.detectChanges();\r\n    }).catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit) = \"guardarOferta()\" class=\"form\" id=\"kt_form\">\r\n    <app-notice class=\"text-right\">\r\n      <button *ngIf=\"mostrarBotonesGeneral\" class=\"btn btn-success \" type=\"submit\" name=\"btn-guardar\" [disabled]=\"form.invalid\">\r\n        <i class=\"fa fa-check\"></i>  Guardar\r\n      </button>\r\n      <a *ngIf=\"mostrarBotonEdit\" class=\"btn btn-info \" name=\"btn-editar\" (click)=\"editarForm()\">\r\n        <i class=\"fa fa-edit\"></i>  Editar\r\n      </a>\r\n      <a *ngIf=\"mostrarBotonDelete\" class=\"btn btn-danger ml-2\" name=\"btn-eliminar\" (click)=\"eliminarForm()\">\r\n        <i class=\"fa fa-trash\"></i>  Eliminar\r\n      </a>\r\n    </app-notice>\r\n  \r\n    <div class=\"card card-custom gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title mb-0 text-right\">\r\n            <p>Información de la oferta</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"pb-5\" data-wizard-type=\"step-content\" data-wizard-state=\"current\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label>Título</label>\r\n                  <input type=\"text\" class=\"form-control\" formControlName=\"titulo\" placeholder=\"Título de la oferta\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Fecha Alta</label>\r\n                  <div class=\"input-group\">\r\n                    <input class=\"form-control\" placeholder=\"dd-mm-yyyy\" name=\"dp\" ngbDatepicker formControlName=\"fechaAlta\" #d=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                      <button class=\"btn btn-primary\" (click)=\"d.toggle()\" type=\"button\">\r\n                        <i class=\"fa fa-calendar\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Fecha Inicio</label>\r\n                  <div class=\"input-group\">\r\n                    <input class=\"form-control\" placeholder=\"dd-mm-yyyy\" name=\"dp\" ngbDatepicker formControlName=\"fechaInicio\" #e=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                      <button class=\"btn btn-primary\" (click)=\"e.toggle()\" type=\"button\">\r\n                        <i class=\"fa fa-calendar\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Fecha Fin</label>\r\n                  <div class=\"input-group\">\r\n                    <input class=\"form-control\" placeholder=\"dd-mm-yyyy\" name=\"dp\" ngbDatepicker formControlName=\"fechaFin\" #f=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                      <button class=\"btn btn-primary\" (click)=\"f.toggle()\" type=\"button\">\r\n                        <i class=\"fa fa-calendar\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <div class=\"form-group mt-0 mt-md-10\">\r\n                  <mat-checkbox class=\"example-margin\" formControlName=\"mostrar\">Mostrar en la web</mat-checkbox>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </form>\r\n  \r\n <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card card-custom gutter-b\">\r\n            <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n                <h3 class=\"card-label\">Documentación</h3>\r\n            </div>\r\n            <div class=\"card-toolbar\">\r\n                <button *ngIf=\"mostrarBotonesGeneral\" type=\"button\" class=\"btn btn-primary\" (click)=\"crearDocumentacion()\">\r\n                <i class=\"fa fa-plus\"></i> Añadir</button>\r\n            </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n            <div class=\"pb-5\" data-wizard-type=\"step-content\" data-wizard-state=\"current\">\r\n                <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"table-responsive angular-bootstrap-table\">\r\n                    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Original</th>\r\n                            <th>Tamaño</th>\r\n                            <th> </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let item of listDocumentacion\">\r\n                            <td>{{ item.nombre }}</td>\r\n                            <td>\r\n                            <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                                                            <a (click)=\"download(item.url, item.original)\"  class=\"btn btn-outline-success\" title=\"\" target=\"_blank\" >{{ item.original }}</a>\r\n                                                            <a (click)=\"download(item.url, item.original)\"  class=\"btn btn-outline-success\" title=\"\"><i class=\"fa fa-download\"></i></a>\r\n                                                        </div>\r\n                            </td>\r\n                            <td>{{ item.tamanio }}</td>\r\n                            <td>\r\n                            <div *ngIf=\"mostrarBotonesGeneral\" class=\"text-center accion\">\r\n                                <a title=\"Editar documento\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                                (click)=\"editarDocumento(item.id)\">\r\n                                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                                    class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                                </span>\r\n                                </a>\r\n                \r\n                                <a title=\"Eliminar documento\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n                                (click)=\"eliminarDocumento(item.id)\">\r\n                                <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                                    class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                                </span>\r\n                                </a>\r\n                            </div>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-5\">\r\n        <div class=\"card card-custom gutter-b\">\r\n            <div class=\"card-header\">\r\n            <div class=\"card-title mb-0 text-right\">\r\n                <p>Imagen</p>\r\n            </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"pb-5\" data-wizard-type=\"step-content\" data-wizard-state=\"current\">\r\n\r\n                <div *ngIf=\"mostrarBotonesGeneral\" class=\"row\">\r\n                    <div  class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <input #fileInput type=\"file\" accept=\"image/*\" (change)=\"onUpload($event)\">\r\n                    </div>\r\n                    </div>\r\n                    <div class=\"col-12 text-center\">\r\n                    <div  [className]=\"mostrarImagen ? 'mostrarImagenArea' : 'ocultarImagenArea'\">\r\n                        <img id=\"imagen-subida\" [src]=\"imagePath\" class=\"img-responsive img-container\" style=\"max-width: 100%;\">\r\n                        <a  class=\"btn btn-danger btn-eliminar-img\" (click)=\"reset(fileInput)\"><i class=\"fa fa-trash\"></i> </a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"!mostrarBotonesGeneral\" class=\"row\">\r\n                    <div class=\"col-12 text-center\">\r\n                    <div [className]=\"mostrarImagen ? 'mostrarImagenArea' : 'ocultarImagenArea'\">\r\n                        <img id=\"imagen-subida\" [src]=\"imagePath\" class=\"img-responsive\"  style=\"max-width: 100%;\">\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> \r\n  \r\n  \r\n  \r\n  \r\n  \r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-eliminar-documentacion-modal',\r\n  templateUrl: './eliminar-documentacion-modal.component.html',\r\n  styleUrls: ['./eliminar-documentacion-modal.component.scss']\r\n})\r\nexport class EliminarDocumentacionModalComponent implements OnInit {\r\n\r\n \r\n  @Input() id: number;\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  eliminarDocumento ()\r\n  {\r\n    this.modal.close();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <div class=\"modal-title h4\">Eliminar documento</div>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <span>¿Estás seguro de eliminar este documento?</span>\r\n  </div>\r\n  \r\n  <div class=\"modal-footer\">\r\n    <div>\r\n      <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">Cancelar</button>&nbsp;\r\n      <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"eliminarDocumento()\">Eliminar</button>\r\n    </div>\r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-listado',\r\n  templateUrl: './listado.component.html',\r\n  styleUrls: ['./listado.component.scss']\r\n})\r\nexport class ListadoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>listado works!</p>\r\n"]}