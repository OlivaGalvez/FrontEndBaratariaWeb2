{"version":3,"sources":["./node_modules/ngx-image-zoom/__ivy_ngcc__/fesm2015/ngx-image-zoom.js","./src/app/portal/ofertas/ofertas.component.ts","./src/app/portal/ofertas/ofertas.component.html","./src/app/portal/ofertas/ofertas.module.ts"],"names":[],"mappings":"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","file":"portal-ofertas-ofertas-module-es2015.js","sourcesContent":["import { __decorate } from 'tslib';\r\nimport { EventEmitter, Renderer2, ViewChild, Output, Input, Component, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/common';\r\n\r\nconst _c0 = [\"zoomContainer\"];\r\nconst _c1 = [\"imageThumbnail\"];\r\nconst _c2 = [\"fullSizeImage\"];\r\nconst _c3 = function (a1) { return { \"ngxImageZoomFullContainer\": true, \"ngxImageZoomLensEnabled\": a1 }; };\r\nvar NgxImageZoomComponent_1;\r\nlet NgxImageZoomComponent = NgxImageZoomComponent_1 = class NgxImageZoomComponent {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.zoomScroll = new EventEmitter();\r\n        this.zoomPosition = new EventEmitter();\r\n        this.enableLens = false;\r\n        this.lensBorderRadius = 0;\r\n        this.lensWidth = 100;\r\n        this.lensHeight = 100;\r\n        this.zoomMode = 'hover';\r\n        this.magnification = 1;\r\n        this.enableScrollZoom = false;\r\n        this.scrollStepSize = 0.1;\r\n        this.circularLens = false;\r\n        this.maxZoomRatio = 2;\r\n        this.zoomingEnabled = false;\r\n        this.zoomFrozen = false;\r\n        this.isReady = false;\r\n        this.thumbImageLoaded = false;\r\n        this.fullImageLoaded = false;\r\n        this.eventListeners = [];\r\n    }\r\n    set setThumbImage(thumbImage) {\r\n        this.thumbImageLoaded = false;\r\n        this.isReady = false;\r\n        this.thumbImage = thumbImage;\r\n    }\r\n    set setFullImage(fullImage) {\r\n        this.fullImageLoaded = false;\r\n        this.isReady = false;\r\n        this.fullImage = fullImage;\r\n    }\r\n    set setZoomMode(zoomMode) {\r\n        if (NgxImageZoomComponent_1.validZoomModes.some(m => m === zoomMode)) {\r\n            this.zoomMode = zoomMode;\r\n        }\r\n    }\r\n    set setMagnification(magnification) {\r\n        this.magnification = Number(magnification) || this.magnification;\r\n        this.zoomScroll.emit(this.magnification);\r\n    }\r\n    set setMinZoomRatio(minZoomRatio) {\r\n        const ratio = Number(minZoomRatio) || this.minZoomRatio || this.baseRatio || 0;\r\n        this.minZoomRatio = Math.max(ratio, this.baseRatio || 0);\r\n    }\r\n    set setMaxZoomRatio(maxZoomRatio) {\r\n        this.maxZoomRatio = Number(maxZoomRatio) || this.maxZoomRatio;\r\n    }\r\n    set setScrollStepSize(stepSize) {\r\n        this.scrollStepSize = Number(stepSize) || this.scrollStepSize;\r\n    }\r\n    set setEnableLens(enable) {\r\n        this.enableLens = Boolean(enable);\r\n    }\r\n    set setLensWidth(width) {\r\n        this.lensWidth = Number(width) || this.lensWidth;\r\n    }\r\n    set setLensHeight(height) {\r\n        this.lensHeight = Number(height) || this.lensHeight;\r\n    }\r\n    set setCircularLens(enable) {\r\n        this.circularLens = Boolean(enable);\r\n    }\r\n    set setEnableScrollZoom(enable) {\r\n        this.enableScrollZoom = Boolean(enable);\r\n    }\r\n    ngOnInit() {\r\n        this.setUpEventListeners();\r\n    }\r\n    ngOnChanges() {\r\n        if (this.enableLens) {\r\n            if (this.circularLens) {\r\n                this.lensBorderRadius = this.lensWidth / 2;\r\n            }\r\n            else {\r\n                this.lensBorderRadius = 0;\r\n            }\r\n        }\r\n        this.calculateRatioAndOffset();\r\n        this.calculateImageAndLensPosition();\r\n    }\r\n    ngOnDestroy() {\r\n        this.eventListeners.forEach((destroyFn) => destroyFn());\r\n    }\r\n    /**\r\n     * Template helper methods\r\n     */\r\n    onThumbImageLoaded() {\r\n        this.thumbImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    onFullImageLoaded() {\r\n        this.fullImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    setUpEventListeners() {\r\n        if (this.zoomMode === 'hover') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', (event) => this.hoverMouseEnter(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.hoverMouseLeave()));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.hoverMouseMove(event)));\r\n        }\r\n        else if (this.zoomMode === 'toggle') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.toggleClick(event)));\r\n        }\r\n        else if (this.zoomMode === 'click') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.clickStarter(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.clickMouseLeave()));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.clickMouseMove(event)));\r\n        }\r\n        else if (this.zoomMode === 'hover-freeze') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', (event) => this.hoverFreezeMouseEnter(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.hoverFreezeMouseLeave()));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.hoverFreezeMouseMove(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.hoverFreezeClick(event)));\r\n        }\r\n        if (this.enableScrollZoom) {\r\n            // Chrome: 'mousewheel', Firefox: 'DOMMouseScroll', IE: 'onmousewheel'\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousewheel', (event) => this.onMouseWheel(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'DOMMouseScroll', (event) => this.onMouseWheel(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'onmousewheel', (event) => this.onMouseWheel(event)));\r\n        }\r\n        if (this.enableLens && this.circularLens) {\r\n            this.lensBorderRadius = this.lensWidth / 2;\r\n        }\r\n    }\r\n    checkImagesLoaded() {\r\n        this.calculateRatioAndOffset();\r\n        if (this.thumbImageLoaded && this.fullImageLoaded) {\r\n            this.calculateImageAndLensPosition();\r\n            this.isReady = true;\r\n        }\r\n    }\r\n    /**\r\n     * Zoom position setters\r\n     */\r\n    setZoomPosition(left, top) {\r\n        this.latestMouseLeft = Number(left) || this.latestMouseLeft;\r\n        this.latestMouseTop = Number(top) || this.latestMouseTop;\r\n        const c = {\r\n            x: this.latestMouseLeft,\r\n            y: this.latestMouseTop\r\n        };\r\n        this.zoomPosition.emit(c);\r\n    }\r\n    /**\r\n     * Mouse wheel event\r\n     */\r\n    onMouseWheel(event) {\r\n        // Don't eat events if zooming isn't active\r\n        if (!this.zoomingEnabled || this.zoomFrozen) {\r\n            return;\r\n        }\r\n        event = window.event || event; // old IE\r\n        const direction = Math.max(Math.min((event.wheelDelta || -event.detail), 1), -1);\r\n        if (direction > 0) {\r\n            // up\r\n            this.setMagnification = Math.min(this.magnification + this.scrollStepSize, this.maxZoomRatio);\r\n        }\r\n        else {\r\n            // down\r\n            this.setMagnification = Math.max(this.magnification - this.scrollStepSize, this.minZoomRatio);\r\n        }\r\n        this.calculateRatio();\r\n        this.calculateZoomPosition(event);\r\n        // Prevent scrolling on page.\r\n        event.returnValue = false; // IE\r\n        if (event.preventDefault) {\r\n            event.preventDefault(); // Chrome & FF\r\n        }\r\n    }\r\n    /**\r\n     * Hover mode\r\n     */\r\n    hoverMouseEnter(event) {\r\n        this.zoomOn(event);\r\n    }\r\n    hoverMouseLeave() {\r\n        this.zoomOff();\r\n    }\r\n    hoverMouseMove(event) {\r\n        this.calculateZoomPosition(event);\r\n    }\r\n    /**\r\n     * Toggle mode\r\n     */\r\n    toggleClick(event) {\r\n        if (this.zoomingEnabled) {\r\n            this.zoomOff();\r\n        }\r\n        else {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    /**\r\n     * Click mode\r\n     */\r\n    clickStarter(event) {\r\n        if (this.zoomingEnabled === false) {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    clickMouseLeave() {\r\n        this.zoomOff();\r\n    }\r\n    clickMouseMove(event) {\r\n        if (this.zoomingEnabled) {\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    /**\r\n     * Hover freeze mode\r\n     */\r\n    hoverFreezeMouseEnter(event) {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    hoverFreezeMouseLeave() {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomOff();\r\n        }\r\n    }\r\n    hoverFreezeMouseMove(event) {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    hoverFreezeClick(event) {\r\n        if (this.zoomingEnabled && this.zoomFrozen) {\r\n            this.zoomFrozen = false;\r\n            this.zoomOff();\r\n        }\r\n        else if (this.zoomingEnabled) {\r\n            this.zoomFrozen = true;\r\n        }\r\n        else {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    /**\r\n     * Private helper methods\r\n     */\r\n    zoomOn(event) {\r\n        if (this.isReady) {\r\n            this.zoomingEnabled = true;\r\n            this.calculateRatioAndOffset();\r\n            this.display = 'block';\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    zoomOff() {\r\n        this.zoomingEnabled = false;\r\n        this.display = 'none';\r\n    }\r\n    calculateZoomPosition(event) {\r\n        const newLeft = Math.max(Math.min(event.offsetX, this.thumbWidth), 0);\r\n        const newTop = Math.max(Math.min(event.offsetY, this.thumbHeight), 0);\r\n        this.setZoomPosition(newLeft, newTop);\r\n        this.calculateImageAndLensPosition();\r\n    }\r\n    calculateImageAndLensPosition() {\r\n        let lensLeftMod = 0;\r\n        let lensTopMod = 0;\r\n        if (this.enableLens) {\r\n            lensLeftMod = this.lensLeft = this.latestMouseLeft - this.lensWidth / 2;\r\n            lensTopMod = this.lensTop = this.latestMouseTop - this.lensHeight / 2;\r\n        }\r\n        this.fullImageLeft = (this.latestMouseLeft * -this.xRatio) - lensLeftMod;\r\n        this.fullImageTop = (this.latestMouseTop * -this.yRatio) - lensTopMod;\r\n    }\r\n    calculateRatioAndOffset() {\r\n        this.thumbWidth = this.imageThumbnail.nativeElement.width;\r\n        this.thumbHeight = this.imageThumbnail.nativeElement.height;\r\n        // If lens is disabled, set lens size to equal thumb size and position it on top of the thumb\r\n        if (!this.enableLens) {\r\n            this.lensWidth = this.thumbWidth;\r\n            this.lensHeight = this.thumbHeight;\r\n            this.lensLeft = 0;\r\n            this.lensTop = 0;\r\n        }\r\n        // getBoundingClientRect() ? https://stackoverflow.com/a/44008873\r\n        this.offsetTop = this.imageThumbnail.nativeElement.getBoundingClientRect().top;\r\n        this.offsetLeft = this.imageThumbnail.nativeElement.getBoundingClientRect().left;\r\n        if (this.fullImage === undefined) {\r\n            this.fullImage = this.thumbImage;\r\n        }\r\n        if (this.fullImageLoaded) {\r\n            this.fullWidth = this.fullSizeImage.nativeElement.naturalWidth;\r\n            this.fullHeight = this.fullSizeImage.nativeElement.naturalHeight;\r\n            this.baseRatio = Math.max((this.thumbWidth / this.fullWidth), (this.thumbHeight / this.fullHeight));\r\n            // Don't allow zooming to smaller than thumbnail size\r\n            this.minZoomRatio = Math.max(this.minZoomRatio || 0, this.baseRatio || 0);\r\n            this.calculateRatio();\r\n        }\r\n    }\r\n    calculateRatio() {\r\n        this.magnifiedWidth = (this.fullWidth * this.magnification);\r\n        this.magnifiedHeight = (this.fullHeight * this.magnification);\r\n        this.xRatio = (this.magnifiedWidth - this.thumbWidth) / this.thumbWidth;\r\n        this.yRatio = (this.magnifiedHeight - this.thumbHeight) / this.thumbHeight;\r\n    }\r\n};\r\nNgxImageZoomComponent.ɵfac = function NgxImageZoomComponent_Factory(t) { return new (t || NgxImageZoomComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\r\nNgxImageZoomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxImageZoomComponent, selectors: [[\"lib-ngx-image-zoom\"]], viewQuery: function NgxImageZoomComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\r\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\r\n        ɵngcc0.ɵɵstaticViewQuery(_c2, true);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.zoomContainer = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.imageThumbnail = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullSizeImage = _t.first);\r\n    } }, inputs: { setThumbImage: [\"thumbImage\", \"setThumbImage\"], setFullImage: [\"fullImage\", \"setFullImage\"], setZoomMode: [\"zoomMode\", \"setZoomMode\"], setMagnification: [\"magnification\", \"setMagnification\"], setMinZoomRatio: [\"minZoomRatio\", \"setMinZoomRatio\"], setMaxZoomRatio: [\"maxZoomRatio\", \"setMaxZoomRatio\"], setScrollStepSize: [\"scrollStepSize\", \"setScrollStepSize\"], setEnableLens: [\"enableLens\", \"setEnableLens\"], setLensWidth: [\"lensWidth\", \"setLensWidth\"], setLensHeight: [\"lensHeight\", \"setLensHeight\"], setCircularLens: [\"circularLens\", \"setCircularLens\"], setEnableScrollZoom: [\"enableScrollZoom\", \"setEnableScrollZoom\"] }, outputs: { zoomScroll: \"zoomScroll\", zoomPosition: \"zoomPosition\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 31, consts: [[1, \"ngxImageZoomContainer\"], [\"zoomContainer\", \"\"], [1, \"ngxImageZoomThumbnail\", 3, \"src\", \"load\"], [\"imageThumbnail\", \"\"], [3, \"ngClass\"], [1, \"ngxImageZoomFull\", 3, \"src\", \"load\"], [\"fullSizeImage\", \"\"]], template: function NgxImageZoomComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\r\n        ɵngcc0.ɵɵelementStart(2, \"img\", 2, 3);\r\n        ɵngcc0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_2_listener() { return ctx.onThumbImageLoaded(); });\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\r\n        ɵngcc0.ɵɵelementStart(5, \"img\", 5, 6);\r\n        ɵngcc0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_5_listener() { return ctx.onFullImageLoaded(); });\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.thumbWidth, \"px\")(\"height\", ctx.thumbHeight, \"px\");\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵproperty(\"src\", ctx.thumbImage, ɵngcc0.ɵɵsanitizeUrl);\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.display)(\"top\", ctx.lensTop, \"px\")(\"left\", ctx.lensLeft, \"px\")(\"width\", ctx.lensWidth, \"px\")(\"height\", ctx.lensHeight, \"px\")(\"border-radius\", ctx.lensBorderRadius, \"px\");\r\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(29, _c3, ctx.enableLens));\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.display)(\"top\", ctx.fullImageTop, \"px\")(\"left\", ctx.fullImageLeft, \"px\")(\"width\", ctx.magnifiedWidth, \"px\")(\"height\", ctx.magnifiedHeight, \"px\");\r\n        ɵngcc0.ɵɵproperty(\"src\", ctx.fullImage, ɵngcc0.ɵɵsanitizeUrl);\r\n    } }, directives: [ɵngcc1.NgClass], styles: [\".ngxImageZoomContainer[_ngcontent-%COMP%]{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail[_ngcontent-%COMP%]{pointer-events:all}.ngxImageZoomFull[_ngcontent-%COMP%]{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer[_ngcontent-%COMP%]{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled[_ngcontent-%COMP%]{border:2px solid red;cursor:crosshair;pointer-events:none}\"] });\r\nNgxImageZoomComponent.validZoomModes = ['hover', 'toggle', 'click', 'hover-freeze'];\r\nNgxImageZoomComponent.ctorParameters = () => [\r\n    { type: Renderer2 }\r\n];\r\n__decorate([\r\n    ViewChild('zoomContainer', { static: true })\r\n], NgxImageZoomComponent.prototype, \"zoomContainer\", void 0);\r\n__decorate([\r\n    ViewChild('imageThumbnail', { static: true })\r\n], NgxImageZoomComponent.prototype, \"imageThumbnail\", void 0);\r\n__decorate([\r\n    ViewChild('fullSizeImage', { static: true })\r\n], NgxImageZoomComponent.prototype, \"fullSizeImage\", void 0);\r\n__decorate([\r\n    Output()\r\n], NgxImageZoomComponent.prototype, \"zoomScroll\", void 0);\r\n__decorate([\r\n    Output()\r\n], NgxImageZoomComponent.prototype, \"zoomPosition\", void 0);\r\n__decorate([\r\n    Input('thumbImage')\r\n], NgxImageZoomComponent.prototype, \"setThumbImage\", null);\r\n__decorate([\r\n    Input('fullImage')\r\n], NgxImageZoomComponent.prototype, \"setFullImage\", null);\r\n__decorate([\r\n    Input('zoomMode')\r\n], NgxImageZoomComponent.prototype, \"setZoomMode\", null);\r\n__decorate([\r\n    Input('magnification')\r\n], NgxImageZoomComponent.prototype, \"setMagnification\", null);\r\n__decorate([\r\n    Input('minZoomRatio')\r\n], NgxImageZoomComponent.prototype, \"setMinZoomRatio\", null);\r\n__decorate([\r\n    Input('maxZoomRatio')\r\n], NgxImageZoomComponent.prototype, \"setMaxZoomRatio\", null);\r\n__decorate([\r\n    Input('scrollStepSize')\r\n], NgxImageZoomComponent.prototype, \"setScrollStepSize\", null);\r\n__decorate([\r\n    Input('enableLens')\r\n], NgxImageZoomComponent.prototype, \"setEnableLens\", null);\r\n__decorate([\r\n    Input('lensWidth')\r\n], NgxImageZoomComponent.prototype, \"setLensWidth\", null);\r\n__decorate([\r\n    Input('lensHeight')\r\n], NgxImageZoomComponent.prototype, \"setLensHeight\", null);\r\n__decorate([\r\n    Input('circularLens')\r\n], NgxImageZoomComponent.prototype, \"setCircularLens\", null);\r\n__decorate([\r\n    Input('enableScrollZoom')\r\n], NgxImageZoomComponent.prototype, \"setEnableScrollZoom\", null);\r\n\r\nlet NgxImageZoomModule = class NgxImageZoomModule {\r\n};\r\nNgxImageZoomModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxImageZoomModule });\r\nNgxImageZoomModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxImageZoomModule_Factory(t) { return new (t || NgxImageZoomModule)(); }, imports: [[\r\n            CommonModule,\r\n        ]] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxImageZoomComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'lib-ngx-image-zoom',\r\n                template: \"<div #zoomContainer class=\\\"ngxImageZoomContainer\\\"\\n     [style.width.px]=\\\"this.thumbWidth\\\" [style.height.px]=\\\"this.thumbHeight\\\">\\n\\n  <img #imageThumbnail class=\\\"ngxImageZoomThumbnail\\\" [src]=\\\"thumbImage\\\" (load)=\\\"onThumbImageLoaded()\\\"/>\\n\\n  <div [ngClass]=\\\"{'ngxImageZoomFullContainer': true, 'ngxImageZoomLensEnabled': this.enableLens}\\\"\\n       [style.display]=\\\"this.display\\\"\\n       [style.top.px]=\\\"this.lensTop\\\"\\n       [style.left.px]=\\\"this.lensLeft\\\"\\n       [style.width.px]=\\\"this.lensWidth\\\"\\n       [style.height.px]=\\\"this.lensHeight\\\"\\n       [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n  >\\n    <img #fullSizeImage class=\\\"ngxImageZoomFull\\\" [src]=\\\"fullImage\\\"\\n         (load)=\\\"onFullImageLoaded()\\\"\\n         [style.display]=\\\"this.display\\\"\\n         [style.top.px]=\\\"this.fullImageTop\\\"\\n         [style.left.px]=\\\"this.fullImageLeft\\\"\\n         [style.width.px]=\\\"this.magnifiedWidth\\\"\\n         [style.height.px]=\\\"this.magnifiedHeight\\\"\\n    />\\n  </div>\\n</div>\\n\",\r\n                styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { zoomScroll: [{\r\n            type: Output\r\n        }], zoomPosition: [{\r\n            type: Output\r\n        }], setThumbImage: [{\r\n            type: Input,\r\n            args: ['thumbImage']\r\n        }], setFullImage: [{\r\n            type: Input,\r\n            args: ['fullImage']\r\n        }], setZoomMode: [{\r\n            type: Input,\r\n            args: ['zoomMode']\r\n        }], setMagnification: [{\r\n            type: Input,\r\n            args: ['magnification']\r\n        }], setMinZoomRatio: [{\r\n            type: Input,\r\n            args: ['minZoomRatio']\r\n        }], setMaxZoomRatio: [{\r\n            type: Input,\r\n            args: ['maxZoomRatio']\r\n        }], setScrollStepSize: [{\r\n            type: Input,\r\n            args: ['scrollStepSize']\r\n        }], setEnableLens: [{\r\n            type: Input,\r\n            args: ['enableLens']\r\n        }], setLensWidth: [{\r\n            type: Input,\r\n            args: ['lensWidth']\r\n        }], setLensHeight: [{\r\n            type: Input,\r\n            args: ['lensHeight']\r\n        }], setCircularLens: [{\r\n            type: Input,\r\n            args: ['circularLens']\r\n        }], setEnableScrollZoom: [{\r\n            type: Input,\r\n            args: ['enableScrollZoom']\r\n        }], zoomContainer: [{\r\n            type: ViewChild,\r\n            args: ['zoomContainer', { static: true }]\r\n        }], imageThumbnail: [{\r\n            type: ViewChild,\r\n            args: ['imageThumbnail', { static: true }]\r\n        }], fullSizeImage: [{\r\n            type: ViewChild,\r\n            args: ['fullSizeImage', { static: true }]\r\n        }] }); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxImageZoomModule, { declarations: function () { return [NgxImageZoomComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxImageZoomComponent]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxImageZoomModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    NgxImageZoomComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                ],\r\n                exports: [\r\n                    NgxImageZoomComponent\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/*\r\n * Public API Surface of ngx-image-zoom\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { NgxImageZoomComponent, NgxImageZoomModule };\r\n\r\n//# sourceMappingURL=ngx-image-zoom.js.map","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ofertas',\r\n  templateUrl: './ofertas.component.html',\r\n  styleUrls: ['./ofertas.component.scss']\r\n})\r\nexport class OfertasComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openModal() {\r\n    console.log(\"open\");\r\n    document.getElementById('imgModal').style.display = \"block\";\r\n  }\r\n\r\n  closeModal() {\r\n    document.getElementById('imgModal').style.display = \"none\";\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-lg-center pb-4\">\r\n\r\n    <div class=\"col-lg-4 mb-4 mb-lg-0 mt-4\">\r\n      <!-- Card -->\r\n      <a class=\"card card-sm card-transition-zoom\" href=\"#\">\r\n        <div class=\"card-transition-zoom-item\">\r\n          <img class=\"card-img opacity\" src=\"/assets/media/barataria/img3.jpg\" alt=\"Image Description\">\r\n        </div>\r\n        <div class=\"card-img-overlay top-auto\">\r\n          <div class=\"d-flex justify-content-end flex-column bg-white rounded-xl p-4\" style=\"border: 3px solid #027762;\">\r\n            <h4 class=\"card-title text-dark mb-1\">Oferta Viajes Samaranch</h4>\r\n            <p class=\"text-dark mb-1\">31 de Enero de 2020</p>\r\n          </div>\r\n        </div>\r\n      </a>\r\n      <!-- End Card -->\r\n    </div>\r\n  </div>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbDropdownModule, NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { InlineSVGModule } from \"ng-inline-svg\";\r\nimport { DropdownMenusModule } from \"src/app/_metronic_portal/partials/content/dropdown-menus/dropdown-menus.module\";\r\nimport { OfertasComponent } from \"./ofertas.component\";\r\nimport { NgxImageZoomModule } from 'ngx-image-zoom';\r\n\r\n@NgModule({\r\n    declarations: [OfertasComponent],\r\n    imports: [\r\n      CommonModule,\r\n      RouterModule.forChild([\r\n        {\r\n          path: '',\r\n          component: OfertasComponent,\r\n        }\r\n      ]),\r\n      DropdownMenusModule,\r\n      InlineSVGModule,\r\n      NgApexchartsModule,\r\n      NgbDropdownModule,\r\n      NgbModule,\r\n      NgxImageZoomModule\r\n    ],\r\n  })\r\n  export class OfertasModule {}"],"sourceRoot":"webpack:///"}