{"version":3,"sources":["webpack:///src/app/portal/enlaces/enlaces.module.ts","webpack:///src/app/_fake/index.js","webpack:///src/app/_fake/fake-helpers/http-extenstions.ts","webpack:///src/app/portal/enlaces/enlaces.component.ts","webpack:///src/app/portal/enlaces/enlaces.component.html"],"names":["EnlacesModule","forChild","path","component","declarations","imports","baseFilter","entities","requestObj","entitiesResult","filterArray","searchInArray","searchTerm","sorting","column","sortArray","direction","totalCount","length","startPosition","paginator","page","pageSize","endPosition","slice","responseObj","items","total","incomingArray","sortField","sortOrder","result","sort","a","b","filter","filtrationFields","Object","keys","forEach","keyName","el","acceptableForSearchTypes","number","string","row","termIsFoundInRow","toString","toLowerCase","indexOf","EnlacesComponent","ref","enlaceServices","subscriptions","API_URL","apiUrl","sb","obtenerEnlaces","subscribe","res","list","push","detectChanges","unsubscribe","selector","templateUrl","styleUrls"],"mappings":"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","file":"portal-enlaces-enlaces-module-es5.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbDropdown, NgbDropdownModule, NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { InlineSVGModule } from \"ng-inline-svg\";\r\nimport { DropdownMenusModule } from \"src/app/_metronic_portal/partials/content/dropdown-menus/dropdown-menus.module\";\r\nimport { EnlacesComponent } from \"./enlaces.component\";\r\n\r\n@NgModule({\r\n    declarations: [EnlacesComponent],\r\n    imports: [\r\n      CommonModule,\r\n      RouterModule.forChild([\r\n        {\r\n          path: '',\r\n          component: EnlacesComponent,\r\n        }\r\n      ]),\r\n      DropdownMenusModule,\r\n      InlineSVGModule,\r\n      NgApexchartsModule,\r\n      NgbDropdownModule,\r\n      NgbModule\r\n    ],\r\n  })\r\n  export class EnlacesModule {}","export * from \"./fake-helpers/http-extenstions\";\n//# sourceMappingURL=index.js.map","import { ITableState } from '../../_metronic_portal/shared/crud-table';\r\n\r\nexport function baseFilter(entities: any[], requestObj: ITableState) {\r\n  // Filtration\r\n  let entitiesResult = filterArray(entities, requestObj);\r\n  // Search\r\n  entitiesResult = searchInArray(entitiesResult, requestObj.searchTerm);\r\n\r\n  // Sorting\r\n  // start\r\n  if (requestObj.sorting.column) {\r\n    entitiesResult = sortArray(entitiesResult, requestObj.sorting.column, requestObj.sorting.direction);\r\n  }\r\n  // end\r\n\r\n  // Paginator\r\n  // start\r\n  const totalCount = entitiesResult.length;\r\n  const startPosition = (requestObj.paginator.page - 1) * requestObj.paginator.pageSize;\r\n  const endPosition = startPosition + requestObj.paginator.pageSize;\r\n  entitiesResult = entitiesResult.slice(startPosition, endPosition);\r\n  // end\r\n\r\n  const responseObj = {\r\n    items: entitiesResult,\r\n    total: totalCount\r\n  };\r\n  return responseObj;\r\n}\r\n\r\nexport function sortArray(incomingArray: any[], sortField: string = '', sortOrder: string = 'asc'): any[] {\r\n  if (!sortField) {\r\n    return incomingArray;\r\n  }\r\n\r\n  let result: any[] = [];\r\n  result = incomingArray.sort((a, b) => {\r\n    if (a[sortField] < b[sortField]) {\r\n      return sortOrder === 'asc' ? -1 : 1;\r\n    }\r\n\r\n    if (a[sortField] > b[sortField]) {\r\n      return sortOrder === 'asc' ? 1 : -1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function filterArray(incomingArray: any[], requestObj: ITableState): any[] {\r\n  if (!requestObj || !requestObj.filter) {\r\n    return incomingArray;\r\n  }\r\n\r\n  let result: any[] = incomingArray;\r\n  const filtrationFields = Object.keys(requestObj.filter);\r\n  filtrationFields.forEach((keyName: string) => {\r\n    // tslint:disable-next-line:triple-equals\r\n    result = result.filter(el => el[keyName] == requestObj.filter[keyName]);\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function searchInArray(incomingArray: any[], searchTerm: string = ''): any[] {\r\n  if (!searchTerm) {\r\n    return incomingArray;\r\n  }\r\n\r\n  const acceptableForSearchTypes = { number: 1, string: 2 };\r\n  const result = incomingArray.filter(row => {\r\n    let termIsFoundInRow = false;\r\n    const keys = Object.keys(row).filter(keyName => acceptableForSearchTypes[typeof row[keyName]] && row[keyName]);\r\n    for (const keyName of keys) {\r\n      if (row[keyName].toString().toLowerCase().indexOf(searchTerm) > -1) {\r\n        termIsFoundInRow = true;\r\n        break;\r\n      }\r\n    }\r\n    return termIsFoundInRow;\r\n  });\r\n  return result;\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Enlace } from 'src/app/models/Enlace';\r\nimport { EnlaceService } from 'src/app/services/enlace.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-enlaces',\r\n  templateUrl: './enlaces.component.html',\r\n  styleUrls: ['./enlaces.component.scss']\r\n})\r\nexport class EnlacesComponent implements OnInit {\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  API_URL = `${environment.apiUrl}`;\r\n  list: Enlace [];\r\n\r\n  message: string;\r\n\r\n  constructor(private ref: ChangeDetectorRef, public enlaceServices: EnlaceService){}\r\n\r\n  ngOnInit(): void {\r\n    const sb = this.enlaceServices.obtenerEnlaces().subscribe(res => {\r\n      this.list = res;\r\n    });\r\n    this.subscriptions.push(sb);\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\r\n  }\r\n\r\n}\r\n","<!--Hay que hacer la parte de gestión-->\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-4 col-sm-6\"  *ngFor=\"let enlace of list\">\r\n        <a *ngIf=\"enlace.url\" href=\"{{enlace.url}}\" target=\"_blank\"><div class=\"thumbnail text-center\">\r\n            <img class=\"img-enlaces\" src={{enlace.imagenServidorBase64}} />\r\n        </div></a>\r\n       <div *ngIf=\"!enlace.url\" class=\"thumbnail text-center\">\r\n            <img class=\"img-enlaces\" src={{enlace.imagenServidorBase64}} />\r\n        </div>\r\n    </div>\r\n</div>"]}