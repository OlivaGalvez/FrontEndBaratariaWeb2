{"version":3,"sources":["webpack:///node_modules/highlight.js/lib/languages/json.js"],"names":["json","hljs","LITERALS","literal","ALLOWED_COMMENTS","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","TYPES","QUOTE_STRING_MODE","C_NUMBER_MODE","VALUE_CONTAINER","end","endsWithParent","excludeEnd","contains","keywords","OBJECT","begin","className","BACKSLASH_ESCAPE","illegal","inherit","concat","ARRAY","push","forEach","rule","name","module","exports"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAASA,IAAT,CAAcC,IAAd,EAAoB;AAClB,YAAMC,QAAQ,GAAG;AACfC,iBAAO,EAAE;AADM,SAAjB;AAGA,YAAMC,gBAAgB,GAAG,CACvBH,IAAI,CAACI,mBADkB,EAEvBJ,IAAI,CAACK,oBAFkB,CAAzB;AAIA,YAAMC,KAAK,GAAG,CACZN,IAAI,CAACO,iBADO,EAEZP,IAAI,CAACQ,aAFO,CAAd;AAIA,YAAMC,eAAe,GAAG;AACtBC,aAAG,EAAE,GADiB;AAEtBC,wBAAc,EAAE,IAFM;AAGtBC,oBAAU,EAAE,IAHU;AAItBC,kBAAQ,EAAEP,KAJY;AAKtBQ,kBAAQ,EAAEb;AALY,SAAxB;AAOA,YAAMc,MAAM,GAAG;AACbC,eAAK,EAAE,IADM;AAEbN,aAAG,EAAE,IAFQ;AAGbG,kBAAQ,EAAE,CACR;AACEI,qBAAS,EAAE,MADb;AAEED,iBAAK,EAAE,GAFT;AAGEN,eAAG,EAAE,GAHP;AAIEG,oBAAQ,EAAE,CAACb,IAAI,CAACkB,gBAAN,CAJZ;AAKEC,mBAAO,EAAE;AALX,WADQ,EAQRnB,IAAI,CAACoB,OAAL,CAAaX,eAAb,EAA8B;AAC5BO,iBAAK,EAAE;AADqB,WAA9B,CARQ,EAWRK,MAXQ,CAWDlB,gBAXC,CAHG;AAebgB,iBAAO,EAAE;AAfI,SAAf;AAiBA,YAAMG,KAAK,GAAG;AACZN,eAAK,EAAE,KADK;AAEZN,aAAG,EAAE,KAFO;AAGZG,kBAAQ,EAAE,CAACb,IAAI,CAACoB,OAAL,CAAaX,eAAb,CAAD,CAHE;AAG+B;AAC3CU,iBAAO,EAAE;AAJG,SAAd;AAMAb,aAAK,CAACiB,IAAN,CAAWR,MAAX,EAAmBO,KAAnB;AACAnB,wBAAgB,CAACqB,OAAjB,CAAyB,UAASC,IAAT,EAAe;AACtCnB,eAAK,CAACiB,IAAN,CAAWE,IAAX;AACD,SAFD;AAGA,eAAO;AACLC,cAAI,EAAE,MADD;AAELb,kBAAQ,EAAEP,KAFL;AAGLQ,kBAAQ,EAAEb,QAHL;AAILkB,iBAAO,EAAE;AAJJ,SAAP;AAMD;;AAEDQ,YAAM,CAACC,OAAP,GAAiB7B,IAAjB","file":"highlight-js-lib-languages-json-es5.js","sourcesContent":["/*\r\nLanguage: JSON\r\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\r\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nWebsite: http://www.json.org\r\nCategory: common, protocols\r\n*/\r\n\r\nfunction json(hljs) {\r\n  const LITERALS = {\r\n    literal: 'true false null'\r\n  };\r\n  const ALLOWED_COMMENTS = [\r\n    hljs.C_LINE_COMMENT_MODE,\r\n    hljs.C_BLOCK_COMMENT_MODE\r\n  ];\r\n  const TYPES = [\r\n    hljs.QUOTE_STRING_MODE,\r\n    hljs.C_NUMBER_MODE\r\n  ];\r\n  const VALUE_CONTAINER = {\r\n    end: ',',\r\n    endsWithParent: true,\r\n    excludeEnd: true,\r\n    contains: TYPES,\r\n    keywords: LITERALS\r\n  };\r\n  const OBJECT = {\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    contains: [\r\n      {\r\n        className: 'attr',\r\n        begin: /\"/,\r\n        end: /\"/,\r\n        contains: [hljs.BACKSLASH_ESCAPE],\r\n        illegal: '\\\\n'\r\n      },\r\n      hljs.inherit(VALUE_CONTAINER, {\r\n        begin: /:/\r\n      })\r\n    ].concat(ALLOWED_COMMENTS),\r\n    illegal: '\\\\S'\r\n  };\r\n  const ARRAY = {\r\n    begin: '\\\\[',\r\n    end: '\\\\]',\r\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\r\n    illegal: '\\\\S'\r\n  };\r\n  TYPES.push(OBJECT, ARRAY);\r\n  ALLOWED_COMMENTS.forEach(function(rule) {\r\n    TYPES.push(rule);\r\n  });\r\n  return {\r\n    name: 'JSON',\r\n    contains: TYPES,\r\n    keywords: LITERALS,\r\n    illegal: '\\\\S'\r\n  };\r\n}\r\n\r\nmodule.exports = json;\r\n"]}